// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AdminMenuCard component should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UserOrders />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Unknown
          component="div"
          loaded={false}
          loadedClassName="loadedContent"
          parentClassName="loader"
>
          <h2
                    className="header text-center"
          >
                    Orders
          </h2>
          <div
                    className="row"
          >
                    <div>
                              No orders Found
                    </div>
          </div>
</Unknown>,
        <Pagination
          changePage={[Function]}
          currentPage={null}
          nextPage={null}
          pages={null}
          previousPage={null}
/>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <h2
              className="header text-center"
>
              Orders
</h2>,
            <div
              className="row"
>
              <div>
                            No orders Found
              </div>
</div>,
          ],
          "component": "div",
          "loaded": false,
          "loadedClassName": "loadedContent",
          "parentClassName": "loader",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Orders",
              "className": "header text-center",
            },
            "ref": null,
            "rendered": "Orders",
            "type": "h2",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div>
                No orders Found
</div>,
              "className": "row",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "No orders Found",
              },
              "ref": null,
              "rendered": "No orders Found",
              "type": "div",
            },
            "type": "div",
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "changePage": [Function],
          "currentPage": null,
          "nextPage": null,
          "pages": null,
          "previousPage": null,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Unknown
            component="div"
            loaded={false}
            loadedClassName="loadedContent"
            parentClassName="loader"
>
            <h2
                        className="header text-center"
            >
                        Orders
            </h2>
            <div
                        className="row"
            >
                        <div>
                                    No orders Found
                        </div>
            </div>
</Unknown>,
          <Pagination
            changePage={[Function]}
            currentPage={null}
            nextPage={null}
            pages={null}
            previousPage={null}
/>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <h2
                className="header text-center"
>
                Orders
</h2>,
              <div
                className="row"
>
                <div>
                                No orders Found
                </div>
</div>,
            ],
            "component": "div",
            "loaded": false,
            "loadedClassName": "loadedContent",
            "parentClassName": "loader",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Orders",
                "className": "header text-center",
              },
              "ref": null,
              "rendered": "Orders",
              "type": "h2",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div>
                  No orders Found
</div>,
                "className": "row",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "No orders Found",
                },
                "ref": null,
                "rendered": "No orders Found",
                "type": "div",
              },
              "type": "div",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "changePage": [Function],
            "currentPage": null,
            "nextPage": null,
            "pages": null,
            "previousPage": null,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
